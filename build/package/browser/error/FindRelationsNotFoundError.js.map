{"version":3,"sources":["../browser/src/error/FindRelationsNotFoundError.ts"],"names":[],"mappings":"AAAA;;EAEE;AACF,MAAM,OAAO,0BAA2B,SAAQ,KAAK;IAEjD,YAAY,iBAA2B;QACnC,KAAK,EAAE,CAAC;QACR,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,CAAC;QAClE,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,OAAO,GAAG,aAAa,iBAAiB,CAAC,CAAC,CAAC,kFAAkF,CAAC;SACtI;aAAM;YACH,IAAI,CAAC,OAAO,GAAG,aAAa,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,yFAAyF,CAAC;SACtL;IACL,CAAC;CAEJ","file":"FindRelationsNotFoundError.js","sourcesContent":["/**\n * Thrown when relations specified in the find options were not found in the entities.\n*/\nexport class FindRelationsNotFoundError extends Error {\n\n    constructor(notFoundRelations: string[]) {\n        super();\n        Object.setPrototypeOf(this, FindRelationsNotFoundError.prototype);\n        if (notFoundRelations.length === 1) {\n            this.message = `Relation \"${notFoundRelations[0]}\" was not found; please check if it is correct and really exists in your entity.`;\n        } else {\n            this.message = `Relations ${notFoundRelations.map(relation => `\"${relation}\"`).join(\", \")} were not found; please check if relations are correct and they exist in your entities.`;\n        }\n    }\n\n}\n"],"sourceRoot":".."}