{"version":3,"sources":["../browser/src/error/NamingStrategyNotFoundError.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,OAAO,2BAA4B,SAAQ,KAAK;IAGlD,YAAY,YAA6B,EAAE,cAAsB;QAC7D,KAAK,EAAE,CAAC;QAHZ,SAAI,GAAG,6BAA6B,CAAC;QAIjC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,CAAC;QACnE,MAAM,IAAI,GAAG,YAAY,YAAY,QAAQ,CAAC,CAAC,CAAE,YAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC;QAC1F,IAAI,CAAC,OAAO,GAAG,oBAAoB,IAAI,4DAA4D;YAC/F,8CAA8C,cAAc,eAAe,CAAC;IACpF,CAAC;CAEJ","file":"NamingStrategyNotFoundError.js","sourcesContent":["/**\n * Thrown when consumer tries to use naming strategy that does not exist.\n */\nexport class NamingStrategyNotFoundError extends Error {\n    name = \"NamingStrategyNotFoundError\";\n\n    constructor(strategyName: string|Function, connectionName: string) {\n        super();\n        Object.setPrototypeOf(this, NamingStrategyNotFoundError.prototype);\n        const name = strategyName instanceof Function ? (strategyName as any).name : strategyName;\n        this.message = `Naming strategy \"${name}\" was not found. Looks like this naming strategy does not ` +\n            `exist or it was not registered in current \"${connectionName}\" connection?`;\n    }\n\n}"],"sourceRoot":".."}