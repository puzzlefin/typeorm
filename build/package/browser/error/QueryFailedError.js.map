{"version":3,"sources":["../browser/src/error/QueryFailedError.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,qBAAqB,CAAC;AAEhD;;EAEE;AACF,MAAM,OAAO,gBAAiB,SAAQ,KAAK;IAEvC,YAAY,KAAa,EAAE,UAA2B,EAAE,WAAgB;QACpE,KAAK,EAAE,CAAC;QACR,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,QAAQ,EAAE;aAChC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;aACvB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;aACvB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAC7B,WAAW,CAAC,MAAM,CAAC,IAAI,kCAChB,WAAW,KACd,IAAI,EAAE,kBAAkB,EACxB,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,UAAU,IAAI,EAAE,IAC9B,CAAC;IACP,CAAC;CAEJ","file":"QueryFailedError.js","sourcesContent":["import {ObjectUtils} from \"../util/ObjectUtils\";\n\n/**\n * Thrown when query execution has failed.\n*/\nexport class QueryFailedError extends Error {\n\n    constructor(query: string, parameters: any[]|undefined, driverError: any) {\n        super();\n        Object.setPrototypeOf(this, QueryFailedError.prototype);\n        this.message = driverError.toString()\n            .replace(/^error: /, \"\")\n            .replace(/^Error: /, \"\")\n            .replace(/^Request/, \"\");\n        ObjectUtils.assign(this, {\n            ...driverError,\n            name: \"QueryFailedError\",\n            query: query,\n            parameters: parameters || []\n        });\n    }\n\n}\n"],"sourceRoot":".."}