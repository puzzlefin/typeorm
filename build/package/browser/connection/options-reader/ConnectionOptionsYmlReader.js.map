{"version":3,"sources":["../browser/src/connection/options-reader/ConnectionOptionsYmlReader.ts"],"names":[],"mappings":";AAAA,OAAO,SAAS,MAAM,SAAS,CAAC;AAChC,OAAO,EAAC,aAAa,EAAC,MAAM,8BAA8B,CAAC;AAG3D;;GAEG;AACH,MAAM,OAAO,0BAA0B;IAEnC,4EAA4E;IAC5E,iBAAiB;IACjB,4EAA4E;IAE5E;;OAEG;IACG,IAAI,CAAC,IAAY;;YACnB,MAAM,cAAc,GAAG,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxD,MAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAC;YAE3C,MAAM,MAAM,GAA8C,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAEtF,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC5B,OAAO,EAAE,CAAC;aACb;YAED,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;gBAC5C,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;YAC3E,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;CAEJ","file":"ConnectionOptionsYmlReader.js","sourcesContent":["import ymlParser from 'js-yaml';\nimport {PlatformTools} from \"../../platform/PlatformTools\";\nimport {ConnectionOptions} from \"../ConnectionOptions\";\n\n/**\n * Reads connection options defined in the yml file.\n */\nexport class ConnectionOptionsYmlReader {\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Reads connection options from given yml file.\n     */\n    async read(path: string): Promise<ConnectionOptions[]> {\n        const contentsBuffer = PlatformTools.readFileSync(path);\n        const contents = contentsBuffer.toString();\n\n        const config: undefined | string | {[key: string]: any} = ymlParser.loadAll(contents);\n\n        if (typeof config !== 'object') {\n            return [];\n        }\n\n        return Object.keys(config).map(connectionName => {\n            return Object.assign({ name: connectionName }, config[connectionName]);\n        });\n    }\n\n}\n"],"sourceRoot":"../.."}