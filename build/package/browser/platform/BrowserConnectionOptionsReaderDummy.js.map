{"version":3,"sources":["../browser/src/platform/BrowserConnectionOptionsReaderDummy.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;AACH,MAAM,OAAO,0BAA0B;IAC7B,IAAI;;YACN,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC5E,CAAC;KAAA;CACJ;AAED;;;;;GAKG;AACH,MAAM,OAAO,0BAA0B;IAC7B,IAAI,CAAC,IAAY;;YACnB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC5E,CAAC;KAAA;CACJ;AAED;;;;;GAKG;AACH,MAAM,OAAO,0BAA0B;IAC7B,IAAI,CAAC,IAAY;;YACnB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC5E,CAAC;KAAA;CACJ;AAED;;;;;GAKG;AACH,MAAM,OAAO,uBAAuB;IAC1B,GAAG;;YACL,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC5E,CAAC;KAAA;IAEK,GAAG;;YACL,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC5E,CAAC;KAAA;IAEK,GAAG;;YACL,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC5E,CAAC;KAAA;CACJ","file":"BrowserConnectionOptionsReaderDummy.js","sourcesContent":["/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsEnvReader {\n    async read() {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n}\n\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsXmlReader {\n    async read(path: string) {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n}\n\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsYmlReader {\n    async read(path: string) {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n}\n\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsReader {\n    async all() {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n\n    async get() {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n\n    async has() {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n}\n"],"sourceRoot":".."}