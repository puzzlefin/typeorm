{"version":3,"sources":["../../src/error/CannotReflectMethodParameterTypeError.ts"],"names":[],"mappings":";;;AAAA;;;GAGG;AACH,MAAa,qCAAsC,SAAQ,KAAK;IAG5D,YAAY,MAAgB,EAAE,UAAkB;QAC5C,KAAK,EAAE,CAAC;QAHZ,SAAI,GAAG,uCAAuC,CAAC;QAI3C,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,qCAAqC,CAAC,SAAS,CAAC,CAAC;QAC7E,IAAI,CAAC,OAAO,GAAG,oCAAoC,UAAU,4BAA4B,MAAM,CAAC,IAAI,WAAW;YAC3G,yFAAyF;YACzF,wGAAwG,CAAC;IACjH,CAAC;CAEJ;AAXD,sFAWC","file":"CannotReflectMethodParameterTypeError.js","sourcesContent":["/**\n * Thrown when ORM cannot get method parameter's type.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nexport class CannotReflectMethodParameterTypeError extends Error {\n    name = \"CannotReflectMethodParameterTypeError\";\n\n    constructor(target: Function, methodName: string) {\n        super();\n        Object.setPrototypeOf(this, CannotReflectMethodParameterTypeError.prototype);\n        this.message = `Cannot get reflected type for a \"${methodName}\" method's parameter of \"${target.name}\" class. ` +\n            `Make sure you have turned on an \"emitDecoratorMetadata\": true option in tsconfig.json. ` +\n            `Also make sure you have imported \"reflect-metadata\" on top of the main entry file in your application.`;\n    }\n\n}"],"sourceRoot":".."}