{"version":3,"sources":["../../src/error/UsingJoinTableIsNotAllowedError.ts"],"names":[],"mappings":";;;AAGA;GACG;AACH,MAAa,+BAAgC,SAAQ,KAAK;IAGtD,YAAY,cAA8B,EAAE,QAA0B;QAClE,KAAK,EAAE,CAAC;QAHZ,SAAI,GAAG,iCAAiC,CAAC;QAIrC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,+BAA+B,CAAC,SAAS,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,GAAG,sBAAsB,cAAc,CAAC,IAAI,IAAI,QAAQ,CAAC,YAAY,aAAa;YAC1F,GAAG,cAAc,CAAC,IAAI,IAAI,QAAQ,CAAC,YAAY,QAAQ,QAAQ,CAAC,YAAY,aAAa;YACzF,+DAA+D,CAAC;IACxE,CAAC;CAEJ;AAXD,0EAWC","file":"UsingJoinTableIsNotAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\n\n/**\n */\nexport class UsingJoinTableIsNotAllowedError extends Error {\n    name = \"UsingJoinTableIsNotAllowedError\";\n\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super();\n        Object.setPrototypeOf(this, UsingJoinTableIsNotAllowedError.prototype);\n        this.message = `Using JoinTable on ${entityMetadata.name}#${relation.propertyName} is wrong. ` +\n            `${entityMetadata.name}#${relation.propertyName} has ${relation.relationType} relation, ` +\n            `however you can use JoinTable only on many-to-many relations.`;\n    }\n\n}"],"sourceRoot":".."}