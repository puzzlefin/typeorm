{"version":3,"sources":["../../src/error/OptimisticLockVersionMismatchError.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAa,kCAAmC,SAAQ,KAAK;IAGzD,YAAY,MAAc,EAAE,eAA4B,EAAE,aAA0B;QAChF,KAAK,EAAE,CAAC;QAHZ,SAAI,GAAG,oCAAoC,CAAC;QAIxC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,kCAAkC,CAAC,SAAS,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,GAAG,iCAAiC,MAAM,oBAAoB,eAAe,kCAAkC,aAAa,GAAG,CAAC;IAChJ,CAAC;CAEJ;AATD,gFASC","file":"OptimisticLockVersionMismatchError.js","sourcesContent":["/**\n * Thrown when a version check on an object that uses optimistic locking through a version field fails.\n */\nexport class OptimisticLockVersionMismatchError extends Error {\n    name = \"OptimisticLockVersionMismatchError\";\n\n    constructor(entity: string, expectedVersion: number|Date, actualVersion: number|Date) {\n        super();\n        Object.setPrototypeOf(this, OptimisticLockVersionMismatchError.prototype);\n        this.message = `The optimistic lock on entity ${entity} failed, version ${expectedVersion} was expected, but is actually ${actualVersion}.`;\n    }\n\n}\n"],"sourceRoot":".."}